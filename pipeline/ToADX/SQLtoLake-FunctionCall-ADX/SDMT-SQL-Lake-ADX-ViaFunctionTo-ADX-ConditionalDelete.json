{
    "name": "SDMT-SQL-Lake-ADX-ViaFunctionTo-ADX-ConditionalDelete",
    "properties": {
        "activities": [
            {
                "name": "ForEach1",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "GetSetSlicedImportObjectToLoad",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('GetSetSlicedImportObjectToLoad').output.value",
                        "type": "Expression"
                    },
                    "isSequential": true,
                    "activities": [
                        {
                            "name": "SetSlicedImportObjectStart",
                            "type": "Lookup",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "AzureSqlSource",
                                    "sqlReaderStoredProcedureName": "[Core].[SetSlicedImportObjectStart]",
                                    "storedProcedureParameters": {
                                        "PipelineRunId": {
                                            "type": "String",
                                            "value": {
                                                "value": "@pipeline().RunId",
                                                "type": "Expression"
                                            }
                                        },
                                        "SlicedImportObject_Id": {
                                            "type": "Guid",
                                            "value": {
                                                "value": "@item().SlicedImportObject_Id",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "SDMT_MetaData",
                                    "type": "DatasetReference"
                                }
                            }
                        },
                        {
                            "name": "SetSlicedImportObjectEnd",
                            "type": "Lookup",
                            "dependsOn": [
                                {
                                    "activity": "IfMinOneRowCopied",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "AzureSqlSource",
                                    "sqlReaderStoredProcedureName": "[Core].[SetSlicedImportObjectEnd]",
                                    "storedProcedureParameters": {
                                        "RowsTransferred": {
                                            "type": "Int32",
                                            "value": {
                                                "value": "@activity('CountRows').output.value[0].RowCount",
                                                "type": "Expression"
                                            }
                                        },
                                        "SlicedImportObject_Id": {
                                            "type": "Guid",
                                            "value": {
                                                "value": "@item().SlicedImportObject_Id",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "SDMT_MetaData",
                                    "type": "DatasetReference"
                                }
                            }
                        },
                        {
                            "name": "SetSlicedImportObjectError",
                            "type": "Lookup",
                            "dependsOn": [
                                {
                                    "activity": "IfMinOneRowCopied",
                                    "dependencyConditions": [
                                        "Failed"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "AzureSqlSource",
                                    "sqlReaderStoredProcedureName": "[Core].[SetSlicedImportObjectError]",
                                    "storedProcedureParameters": {
                                        "Error": {
                                            "type": "String",
                                            "value": {
                                                "value": "@activity('FetchData').Error.message",
                                                "type": "Expression"
                                            }
                                        },
                                        "SlicedImportObject_Id": {
                                            "type": "Guid",
                                            "value": {
                                                "value": "@item().SlicedImportObject_Id",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "dataset": {
                                    "referenceName": "SDMT_MetaData",
                                    "type": "DatasetReference"
                                }
                            }
                        },
                        {
                            "name": "FailFetchData",
                            "type": "Fail",
                            "dependsOn": [
                                {
                                    "activity": "SetSlicedImportObjectError",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "message": {
                                    "value": "@activity('FetchData').Error.message",
                                    "type": "Expression"
                                },
                                "errorCode": {
                                    "value": "@activity('FetchData').Error.errorCode",
                                    "type": "Expression"
                                }
                            }
                        },
                        {
                            "name": "CheckDropTargetExtent",
                            "type": "IfCondition",
                            "dependsOn": [
                                {
                                    "activity": "SetSlicedImportObjectStart",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "expression": {
                                    "value": "@pipeline().parameters.DropTargetExtent",
                                    "type": "Expression"
                                },
                                "ifTrueActivities": [
                                    {
                                        "name": "Drop existing extent",
                                        "description": "",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [],
                                        "policy": {
                                            "timeout": "0.12:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "command": {
                                                "value": "@activity('SetSlicedImportObjectStart').output.firstRow.ADXDropExtentCommand",
                                                "type": "Expression"
                                            },
                                            "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                            "referenceName": "SDMT_ADX",
                                            "type": "LinkedServiceReference",
                                            "parameters": {
                                                "DatabaseName": {
                                                    "value": "@pipeline().parameters.ADX_DatabaseName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "SetSlicedImportObjectError_Drop existing extent",
                                        "type": "Lookup",
                                        "dependsOn": [
                                            {
                                                "activity": "Drop existing extent",
                                                "dependencyConditions": [
                                                    "Failed"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "0.12:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "source": {
                                                "type": "AzureSqlSource",
                                                "sqlReaderStoredProcedureName": "[Core].[SetSlicedImportObjectError]",
                                                "storedProcedureParameters": {
                                                    "Error": {
                                                        "type": "String",
                                                        "value": {
                                                            "value": "@activity('Drop existing extent').Error.message",
                                                            "type": "Expression"
                                                        }
                                                    },
                                                    "SlicedImportObject_Id": {
                                                        "type": "Guid",
                                                        "value": {
                                                            "value": "@item().SlicedImportObject_Id",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "queryTimeout": "02:00:00",
                                                "partitionOption": "None"
                                            },
                                            "dataset": {
                                                "referenceName": "SDMT_MetaData",
                                                "type": "DatasetReference"
                                            }
                                        }
                                    },
                                    {
                                        "name": "ReportFailToStop",
                                        "type": "Fail",
                                        "dependsOn": [
                                            {
                                                "activity": "SetSlicedImportObjectError_Drop existing extent",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "userProperties": [],
                                        "typeProperties": {
                                            "message": {
                                                "value": "@activity('Drop existing extent').Error.message",
                                                "type": "Expression"
                                            },
                                            "errorCode": {
                                                "value": "@activity('Drop existing extent').Error.errorCode",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "Copy data to lake",
                            "type": "Copy",
                            "dependsOn": [
                                {
                                    "activity": "Delete existing data in lake",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "source": {
                                    "type": "AzureSqlSource",
                                    "sqlReaderQuery": {
                                        "value": "@activity('SetSlicedImportObjectStart').output.firstRow.SelectCommand",
                                        "type": "Expression"
                                    },
                                    "queryTimeout": "02:00:00",
                                    "partitionOption": "None"
                                },
                                "sink": {
                                    "type": "ParquetSink",
                                    "storeSettings": {
                                        "type": "AzureBlobFSWriteSettings"
                                    },
                                    "formatSettings": {
                                        "type": "ParquetWriteSettings",
                                        "maxRowsPerFile": {
                                            "value": "@activity('SetSlicedImportObjectStart').output.firstRow.MaxRowsPerFile",
                                            "type": "Expression"
                                        },
                                        "fileNamePrefix": {
                                            "value": "@activity('SetSlicedImportObjectStart').output.firstRow.DestinationFileName",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                "enableStaging": false,
                                "translator": {
                                    "type": "TabularTranslator",
                                    "typeConversion": true,
                                    "typeConversionSettings": {
                                        "allowDataTruncation": true,
                                        "treatBooleanAsNumber": false
                                    }
                                }
                            },
                            "inputs": [
                                {
                                    "referenceName": "ADFToPowerBI2Generic",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "DatabaseName": "AdventureWorksLT"
                                    }
                                }
                            ],
                            "outputs": [
                                {
                                    "referenceName": "SMDT_DataLakeParquet",
                                    "type": "DatasetReference",
                                    "parameters": {
                                        "Container": {
                                            "value": "@activity('SetSlicedImportObjectStart').output.firstRow.ContainerName",
                                            "type": "Expression"
                                        },
                                        "Directory": {
                                            "value": "@activity('SetSlicedImportObjectStart').output.firstRow.DestinationPath",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "Delete existing data in lake",
                            "description": "Make sure, that old files are removed.",
                            "type": "Delete",
                            "dependsOn": [
                                {
                                    "activity": "SetSlicedImportObjectStart",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "policy": {
                                "timeout": "0.12:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "dataset": {
                                    "referenceName": "SMDT_DataLakeParquet",
                                    "type": "DatasetReference"
                                },
                                "enableLogging": false,
                                "storeSettings": {
                                    "type": "AzureBlobFSReadSettings",
                                    "recursive": true,
                                    "enablePartitionDiscovery": false
                                }
                            }
                        },
                        {
                            "name": "IfMinOneRowCopied",
                            "type": "IfCondition",
                            "dependsOn": [
                                {
                                    "activity": "Copy data to lake",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                },
                                {
                                    "activity": "CheckDropTargetExtent",
                                    "dependencyConditions": [
                                        "Succeeded"
                                    ]
                                }
                            ],
                            "userProperties": [],
                            "typeProperties": {
                                "expression": {
                                    "value": "@greaterOrEquals(activity('Copy data to lake').output.rowsCopied,1)",
                                    "type": "Expression"
                                },
                                "ifTrueActivities": [
                                    {
                                        "name": "FetchData",
                                        "description": "",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [],
                                        "policy": {
                                            "timeout": "0.12:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "command": {
                                                "value": "@activity('SetSlicedImportObjectStart').output.firstRow.ADXFetchCommand",
                                                "type": "Expression"
                                            },
                                            "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                            "referenceName": "SDMT_ADX",
                                            "type": "LinkedServiceReference",
                                            "parameters": {
                                                "DatabaseName": {
                                                    "value": "@pipeline().parameters.ADX_DatabaseName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    },
                                    {
                                        "name": "CountRows",
                                        "description": "",
                                        "type": "AzureDataExplorerCommand",
                                        "dependsOn": [
                                            {
                                                "activity": "FetchData",
                                                "dependencyConditions": [
                                                    "Succeeded"
                                                ]
                                            }
                                        ],
                                        "policy": {
                                            "timeout": "0.12:00:00",
                                            "retry": 0,
                                            "retryIntervalInSeconds": 30,
                                            "secureOutput": false,
                                            "secureInput": false
                                        },
                                        "userProperties": [],
                                        "typeProperties": {
                                            "command": {
                                                "value": "@activity('SetSlicedImportObjectStart').output.firstRow.ADXCountRowsInExtentCommand",
                                                "type": "Expression"
                                            },
                                            "commandTimeout": "00:20:00"
                                        },
                                        "linkedServiceName": {
                                            "referenceName": "SDMT_ADX",
                                            "type": "LinkedServiceReference",
                                            "parameters": {
                                                "DatabaseName": {
                                                    "value": "@pipeline().parameters.ADX_DatabaseName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            },
            {
                "name": "GetSetSlicedImportObjectToLoad",
                "description": "Get a list of the data slices to be transferred, based on the status and the start parameters.",
                "type": "Lookup",
                "dependsOn": [],
                "policy": {
                    "timeout": "0.12:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "source": {
                        "type": "AzureSqlSource",
                        "sqlReaderStoredProcedureName": "[Core].[GetSetSlicedImportObjectToLoad]",
                        "storedProcedureParameters": {
                            "Mode": {
                                "type": "String",
                                "value": {
                                    "value": "@pipeline().parameters.Mode",
                                    "type": "Expression"
                                }
                            },
                            "SlicedImportObject_Id": {
                                "type": "String",
                                "value": {
                                    "value": "@pipeline().parameters.SlicedImportObject_Id",
                                    "type": "Expression"
                                }
                            },
                            "SourceObject": {
                                "type": "String",
                                "value": {
                                    "value": "@pipeline().parameters.SourceObject",
                                    "type": "Expression"
                                }
                            },
                            "SourceSchema": {
                                "type": "String",
                                "value": {
                                    "value": "@pipeline().parameters.SourceSchema",
                                    "type": "Expression"
                                }
                            },
                            "SourceSystemName": {
                                "type": "String",
                                "value": {
                                    "value": "@pipeline().parameters.SourceSystemName",
                                    "type": "Expression"
                                }
                            }
                        },
                        "queryTimeout": "02:00:00",
                        "partitionOption": "None"
                    },
                    "dataset": {
                        "referenceName": "SDMT_MetaData",
                        "type": "DatasetReference"
                    },
                    "firstRowOnly": false
                }
            }
        ],
        "parameters": {
            "SourceSystemName": {
                "type": "string",
                "defaultValue": "SQLToLakeToADX_CopyActivityAndADXFunction"
            },
            "Mode": {
                "type": "string",
                "defaultValue": "REGULAR"
            },
            "DropTargetExtent": {
                "type": "bool",
                "defaultValue": true
            },
            "SourceSchema": {
                "type": "string",
                "defaultValue": "%"
            },
            "SourceObject": {
                "type": "string",
                "defaultValue": "%"
            },
            "SlicedImportObject_Id": {
                "type": "string",
                "defaultValue": "%"
            },
            "ADX_DatabaseName": {
                "type": "string",
                "defaultValue": "SDMT_Demo"
            }
        },
        "folder": {
            "name": "SDMT/ToADX/SQLtoLake-FunctionCall-ADX"
        },
        "annotations": [],
        "lastPublishTime": "2023-07-24T14:07:00Z"
    },
    "type": "Microsoft.Synapse/workspaces/pipelines"
}